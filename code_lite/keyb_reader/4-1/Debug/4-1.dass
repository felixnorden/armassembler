
./Debug/4-1.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#include "types.h"
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f8c8 	bl	20000198 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <appInit>:
void appInit(void) {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	#ifdef USBDM
	* ((unsigned long *) 0x40023830) = 0x18;
20000014:	4b11      	ldr	r3, [pc, #68]	; (2000005c <appInit+0x4c>)
20000016:	2218      	movs	r2, #24
20000018:	601a      	str	r2, [r3, #0]
	#endif
	GPIO_D.MODER &= 0x00000000;
2000001a:	4b11      	ldr	r3, [pc, #68]	; (20000060 <appInit+0x50>)
2000001c:	681b      	ldr	r3, [r3, #0]
2000001e:	4b10      	ldr	r3, [pc, #64]	; (20000060 <appInit+0x50>)
20000020:	2200      	movs	r2, #0
20000022:	601a      	str	r2, [r3, #0]
	GPIO_D.MODER |= 0x55005555;
20000024:	4b0e      	ldr	r3, [pc, #56]	; (20000060 <appInit+0x50>)
20000026:	4a0e      	ldr	r2, [pc, #56]	; (20000060 <appInit+0x50>)
20000028:	6812      	ldr	r2, [r2, #0]
2000002a:	490e      	ldr	r1, [pc, #56]	; (20000064 <appInit+0x54>)
2000002c:	430a      	orrs	r2, r1
2000002e:	601a      	str	r2, [r3, #0]
	
	GPIO_D.OTYPER &= 0x0000;
20000030:	4b0b      	ldr	r3, [pc, #44]	; (20000060 <appInit+0x50>)
20000032:	889b      	ldrh	r3, [r3, #4]
20000034:	4b0a      	ldr	r3, [pc, #40]	; (20000060 <appInit+0x50>)
20000036:	2200      	movs	r2, #0
20000038:	809a      	strh	r2, [r3, #4]

	GPIO_D.PUPDR &= 0x0000FFFF;
2000003a:	4b09      	ldr	r3, [pc, #36]	; (20000060 <appInit+0x50>)
2000003c:	4a08      	ldr	r2, [pc, #32]	; (20000060 <appInit+0x50>)
2000003e:	68d2      	ldr	r2, [r2, #12]
20000040:	0412      	lsls	r2, r2, #16
20000042:	0c12      	lsrs	r2, r2, #16
20000044:	60da      	str	r2, [r3, #12]
	GPIO_D.PUPDR |= 0x00AA0000;
20000046:	4b06      	ldr	r3, [pc, #24]	; (20000060 <appInit+0x50>)
20000048:	4a05      	ldr	r2, [pc, #20]	; (20000060 <appInit+0x50>)
2000004a:	68d2      	ldr	r2, [r2, #12]
2000004c:	21aa      	movs	r1, #170	; 0xaa
2000004e:	0409      	lsls	r1, r1, #16
20000050:	430a      	orrs	r2, r1
20000052:	60da      	str	r2, [r3, #12]
}
20000054:	46c0      	nop			; (mov r8, r8)
20000056:	46bd      	mov	sp, r7
20000058:	bd80      	pop	{r7, pc}
2000005a:	46c0      	nop			; (mov r8, r8)
2000005c:	40023830 	andmi	r3, r2, r0, lsr r8
20000060:	40020c00 	andmi	r0, r2, r0, lsl #24
20000064:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab

20000068 <activateRow>:

// x: index of row
void activateRow(uint8 x) {
20000068:	b580      	push	{r7, lr}
2000006a:	b082      	sub	sp, #8
2000006c:	af00      	add	r7, sp, #0
2000006e:	0002      	movs	r2, r0
20000070:	1dfb      	adds	r3, r7, #7
20000072:	701a      	strb	r2, [r3, #0]
	GPIO_D.ODR &= 0x0000FFFF;
20000074:	4b0c      	ldr	r3, [pc, #48]	; (200000a8 <activateRow+0x40>)
20000076:	4a0c      	ldr	r2, [pc, #48]	; (200000a8 <activateRow+0x40>)
20000078:	8a92      	ldrh	r2, [r2, #20]
2000007a:	b292      	uxth	r2, r2
2000007c:	829a      	strh	r2, [r3, #20]
	GPIO_D.ODR |= (0x1 << (12 + x));
2000007e:	490a      	ldr	r1, [pc, #40]	; (200000a8 <activateRow+0x40>)
20000080:	4b09      	ldr	r3, [pc, #36]	; (200000a8 <activateRow+0x40>)
20000082:	8a9b      	ldrh	r3, [r3, #20]
20000084:	b29b      	uxth	r3, r3
20000086:	b21a      	sxth	r2, r3
20000088:	1dfb      	adds	r3, r7, #7
2000008a:	781b      	ldrb	r3, [r3, #0]
2000008c:	330c      	adds	r3, #12
2000008e:	2001      	movs	r0, #1
20000090:	4098      	lsls	r0, r3
20000092:	0003      	movs	r3, r0
20000094:	b21b      	sxth	r3, r3
20000096:	4313      	orrs	r3, r2
20000098:	b21b      	sxth	r3, r3
2000009a:	b29b      	uxth	r3, r3
2000009c:	828b      	strh	r3, [r1, #20]
}
2000009e:	46c0      	nop			; (mov r8, r8)
200000a0:	46bd      	mov	sp, r7
200000a2:	b002      	add	sp, #8
200000a4:	bd80      	pop	{r7, pc}
200000a6:	46c0      	nop			; (mov r8, r8)
200000a8:	40020c00 	andmi	r0, r2, r0, lsl #24

200000ac <readColumns>:
uint8 readColumns() {
200000ac:	b580      	push	{r7, lr}
200000ae:	af00      	add	r7, sp, #0
	return GPIO_D.IDR >> 8;
200000b0:	4b04      	ldr	r3, [pc, #16]	; (200000c4 <readColumns+0x18>)
200000b2:	8a1b      	ldrh	r3, [r3, #16]
200000b4:	b29b      	uxth	r3, r3
200000b6:	0a1b      	lsrs	r3, r3, #8
200000b8:	b29b      	uxth	r3, r3
200000ba:	b2db      	uxtb	r3, r3
}
200000bc:	0018      	movs	r0, r3
200000be:	46bd      	mov	sp, r7
200000c0:	bd80      	pop	{r7, pc}
200000c2:	46c0      	nop			; (mov r8, r8)
200000c4:	40020c00 	andmi	r0, r2, r0, lsl #24

200000c8 <keyb>:
unsigned char keyb( void ) {
200000c8:	b590      	push	{r4, r7, lr}
200000ca:	b083      	sub	sp, #12
200000cc:	af00      	add	r7, sp, #0
	uint8 activeKey = 0xFF;
200000ce:	1d3b      	adds	r3, r7, #4
200000d0:	22ff      	movs	r2, #255	; 0xff
200000d2:	701a      	strb	r2, [r3, #0]
	for (uint8 row = 0; row < 4; row++) {
200000d4:	1dfb      	adds	r3, r7, #7
200000d6:	2200      	movs	r2, #0
200000d8:	701a      	strb	r2, [r3, #0]
200000da:	e036      	b.n	2000014a <keyb+0x82>
		activateRow(row);
200000dc:	1dfb      	adds	r3, r7, #7
200000de:	781b      	ldrb	r3, [r3, #0]
200000e0:	0018      	movs	r0, r3
200000e2:	f7ff ffc1 	bl	20000068 <activateRow>
		uint8 columnValue = readColumns();
200000e6:	1dbc      	adds	r4, r7, #6
200000e8:	f7ff ffe0 	bl	200000ac <readColumns>
200000ec:	0003      	movs	r3, r0
200000ee:	7023      	strb	r3, [r4, #0]
		
		for (uint8 column = 0; column < 4; column++) {
200000f0:	1d7b      	adds	r3, r7, #5
200000f2:	2200      	movs	r2, #0
200000f4:	701a      	strb	r2, [r3, #0]
200000f6:	e01f      	b.n	20000138 <keyb+0x70>
			uint8 activeColumn = (columnValue & 0x1);
200000f8:	1cfb      	adds	r3, r7, #3
200000fa:	1dba      	adds	r2, r7, #6
200000fc:	7812      	ldrb	r2, [r2, #0]
200000fe:	2101      	movs	r1, #1
20000100:	400a      	ands	r2, r1
20000102:	701a      	strb	r2, [r3, #0]
			if (activeColumn) {
20000104:	1cfb      	adds	r3, r7, #3
20000106:	781b      	ldrb	r3, [r3, #0]
20000108:	2b00      	cmp	r3, #0
2000010a:	d00b      	beq.n	20000124 <keyb+0x5c>
				activeKey = row * 4 + column;
2000010c:	1dfb      	adds	r3, r7, #7
2000010e:	781b      	ldrb	r3, [r3, #0]
20000110:	009b      	lsls	r3, r3, #2
20000112:	b2d9      	uxtb	r1, r3
20000114:	1d3b      	adds	r3, r7, #4
20000116:	1d7a      	adds	r2, r7, #5
20000118:	7812      	ldrb	r2, [r2, #0]
2000011a:	188a      	adds	r2, r1, r2
2000011c:	701a      	strb	r2, [r3, #0]
				return activeKey;
2000011e:	1d3b      	adds	r3, r7, #4
20000120:	781b      	ldrb	r3, [r3, #0]
20000122:	e018      	b.n	20000156 <keyb+0x8e>
			}
			columnValue >>= 0x1;
20000124:	1dbb      	adds	r3, r7, #6
20000126:	1dba      	adds	r2, r7, #6
20000128:	7812      	ldrb	r2, [r2, #0]
2000012a:	0852      	lsrs	r2, r2, #1
2000012c:	701a      	strb	r2, [r3, #0]
		for (uint8 column = 0; column < 4; column++) {
2000012e:	1d7b      	adds	r3, r7, #5
20000130:	781a      	ldrb	r2, [r3, #0]
20000132:	1d7b      	adds	r3, r7, #5
20000134:	3201      	adds	r2, #1
20000136:	701a      	strb	r2, [r3, #0]
20000138:	1d7b      	adds	r3, r7, #5
2000013a:	781b      	ldrb	r3, [r3, #0]
2000013c:	2b03      	cmp	r3, #3
2000013e:	d9db      	bls.n	200000f8 <keyb+0x30>
	for (uint8 row = 0; row < 4; row++) {
20000140:	1dfb      	adds	r3, r7, #7
20000142:	781a      	ldrb	r2, [r3, #0]
20000144:	1dfb      	adds	r3, r7, #7
20000146:	3201      	adds	r2, #1
20000148:	701a      	strb	r2, [r3, #0]
2000014a:	1dfb      	adds	r3, r7, #7
2000014c:	781b      	ldrb	r3, [r3, #0]
2000014e:	2b03      	cmp	r3, #3
20000150:	d9c4      	bls.n	200000dc <keyb+0x14>
		}
	}
	return activeKey;
20000152:	1d3b      	adds	r3, r7, #4
20000154:	781b      	ldrb	r3, [r3, #0]
}
20000156:	0018      	movs	r0, r3
20000158:	46bd      	mov	sp, r7
2000015a:	b003      	add	sp, #12
2000015c:	bd90      	pop	{r4, r7, pc}

2000015e <out7seg>:

void out7seg(unsigned char keyValue) {
2000015e:	b580      	push	{r7, lr}
20000160:	b082      	sub	sp, #8
20000162:	af00      	add	r7, sp, #0
20000164:	0002      	movs	r2, r0
20000166:	1dfb      	adds	r3, r7, #7
20000168:	701a      	strb	r2, [r3, #0]
		0x66, 0x6D, 0x7D, 0x7C,
		0x07, 0x7F, 0x67, 0x39,
		0x79, 0x3F, 0x71, 0x5E
	};
	
	if (keyValue < 16 && keyValue >= 0) {
2000016a:	1dfb      	adds	r3, r7, #7
2000016c:	781b      	ldrb	r3, [r3, #0]
2000016e:	2b0f      	cmp	r3, #15
20000170:	d807      	bhi.n	20000182 <out7seg+0x24>
		GPIO_D.ODR = sevenSegmentCodes[keyValue];
20000172:	4907      	ldr	r1, [pc, #28]	; (20000190 <out7seg+0x32>)
20000174:	1dfb      	adds	r3, r7, #7
20000176:	781b      	ldrb	r3, [r3, #0]
20000178:	4a06      	ldr	r2, [pc, #24]	; (20000194 <out7seg+0x36>)
2000017a:	5cd3      	ldrb	r3, [r2, r3]
2000017c:	b29b      	uxth	r3, r3
2000017e:	828b      	strh	r3, [r1, #20]
	} else {
		GPIO_D.ODR = 0x00;
	}
}
20000180:	e002      	b.n	20000188 <out7seg+0x2a>
		GPIO_D.ODR = 0x00;
20000182:	4b03      	ldr	r3, [pc, #12]	; (20000190 <out7seg+0x32>)
20000184:	2200      	movs	r2, #0
20000186:	829a      	strh	r2, [r3, #20]
}
20000188:	46c0      	nop			; (mov r8, r8)
2000018a:	46bd      	mov	sp, r7
2000018c:	b002      	add	sp, #8
2000018e:	bd80      	pop	{r7, pc}
20000190:	40020c00 	andmi	r0, r2, r0, lsl #24
20000194:	200001b0 			; <UNDEFINED> instruction: 0x200001b0

20000198 <main>:

void main(void)
{
20000198:	b580      	push	{r7, lr}
2000019a:	af00      	add	r7, sp, #0
	appInit();
2000019c:	f7ff ff38 	bl	20000010 <appInit>
	while (1) {
		out7seg(keyb());
200001a0:	f7ff ff92 	bl	200000c8 <keyb>
200001a4:	0003      	movs	r3, r0
200001a6:	0018      	movs	r0, r3
200001a8:	f7ff ffd9 	bl	2000015e <out7seg>
200001ac:	e7f8      	b.n	200001a0 <main+0x8>
200001ae:	46c0      	nop			; (mov r8, r8)

200001b0 <sevenSegmentCodes.4040>:
200001b0:	774f5b06 	strbvc	r5, [pc, -r6, lsl #22]
200001b4:	7c7d6d66 	ldclvc	13, cr6, [sp], #-408	; 0xfffffe68
200001b8:	39677f07 	stmdbcc	r7!, {r0, r1, r2, r8, r9, sl, fp, ip, sp, lr}^
200001bc:	5e713f79 	mrcpl	15, 3, r3, cr1, cr9, {3}

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000002aa 	andeq	r0, r0, sl, lsr #5
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000003c 	andeq	r0, r0, ip, lsr r0
  10:	0001c80c 	andeq	ip, r1, ip, lsl #16
	...
  20:	01380200 	teqeq	r8, r0, lsl #4
  24:	04020000 	streq	r0, [r2], #-0
  28:	0000002c 	andeq	r0, r0, ip, lsr #32
  2c:	f1070403 			; <UNDEFINED> instruction: 0xf1070403
  30:	02000000 	andeq	r0, r0, #0
  34:	00000131 	andeq	r0, r0, r1, lsr r1
  38:	003e0502 	eorseq	r0, lr, r2, lsl #10
  3c:	02030000 	andeq	r0, r3, #0
  40:	0000eb07 	andeq	lr, r0, r7, lsl #22
  44:	003e0400 	eorseq	r0, lr, r0, lsl #8
  48:	b0020000 	andlt	r0, r2, r0
  4c:	02000001 	andeq	r0, r0, #1
  50:	00005506 	andeq	r5, r0, r6, lsl #10
  54:	08010300 	stmdaeq	r1, {r8, r9}
  58:	000000d4 	ldrdeq	r0, [r0], -r4
  5c:	00005504 	andeq	r5, r0, r4, lsl #10
  60:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
  64:	00746e69 	rsbseq	r6, r4, r9, ror #28
  68:	9a050203 	bls	14087c <startup-0x1febf784>
  6c:	03000001 	movweq	r0, #1
  70:	00d60601 	sbcseq	r0, r6, r1, lsl #12
  74:	62020000 	andvs	r0, r2, #0
  78:	02000001 	andeq	r0, r0, #1
  7c:	0000450d 	andeq	r4, r0, sp, lsl #10
  80:	011c0200 	tsteq	ip, r0, lsl #4
  84:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
  88:	0000005c 	andeq	r0, r0, ip, asr r0
  8c:	08032806 	stmdaeq	r3, {r1, r2, fp, sp}
  90:	00000149 	andeq	r0, r0, r9, asr #2
  94:	00001007 	andeq	r1, r0, r7
  98:	21090300 	mrscs	r0, (UNDEF: 57)
  9c:	00000000 	andeq	r0, r0, r0
  a0:	00003507 	andeq	r3, r0, r7, lsl #10
  a4:	330a0300 	movwcc	r0, #41728	; 0xa300
  a8:	04000000 	streq	r0, [r0], #-0
  ac:	00018b07 	andeq	r8, r1, r7, lsl #22
  b0:	760b0300 	strvc	r0, [fp], -r0, lsl #6
  b4:	06000000 	streq	r0, [r0], -r0
  b8:	00000807 	andeq	r0, r0, r7, lsl #16
  bc:	210c0300 	mrscs	r0, LR_mon
  c0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
  c4:	00016b07 	andeq	r6, r1, r7, lsl #22
  c8:	210d0300 	mrscs	r0, SP_mon
  cc:	0c000000 	stceq	0, cr0, [r0], {-0}
  d0:	52444908 	subpl	r4, r4, #8, 18	; 0x20000
  d4:	330e0300 	movwcc	r0, #58112	; 0xe300
  d8:	10000000 	andne	r0, r0, r0
  dc:	00012907 	andeq	r2, r1, r7, lsl #18
  e0:	760f0300 	strvc	r0, [pc], -r0, lsl #6
  e4:	12000000 	andne	r0, r0, #0
  e8:	52444f08 	subpl	r4, r4, #8, 30
  ec:	33100300 	tstcc	r0, #0, 6
  f0:	14000000 	strne	r0, [r0], #-0
  f4:	00013f07 	andeq	r3, r1, r7, lsl #30
  f8:	33110300 	tstcc	r1, #0, 6
  fc:	16000000 	strne	r0, [r0], -r0
 100:	00001f07 	andeq	r1, r0, r7, lsl #30
 104:	21120300 	tstcs	r2, r0, lsl #6
 108:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
 10c:	00014b07 	andeq	r4, r1, r7, lsl #22
 110:	33130300 	tstcc	r3, #0, 6
 114:	1c000000 	stcne	0, cr0, [r0], {-0}
 118:	0000e207 	andeq	lr, r0, r7, lsl #4
 11c:	4a140300 	bmi	500d24 <startup-0x1faff2dc>
 120:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
 124:	00014707 	andeq	r4, r1, r7, lsl #14
 128:	81150300 	tsthi	r5, r0, lsl #6
 12c:	1f000000 	svcne	0x00000000
 130:	00002407 	andeq	r2, r0, r7, lsl #8
 134:	21160300 	tstcs	r6, r0, lsl #6
 138:	20000000 	andcs	r0, r0, r0
 13c:	00002907 	andeq	r2, r0, r7, lsl #18
 140:	21170300 	tstcs	r7, r0, lsl #6
 144:	24000000 	strcs	r0, [r0], #-0
 148:	01590200 	cmpeq	r9, r0, lsl #4
 14c:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
 150:	0000008c 	andeq	r0, r0, ip, lsl #1
 154:	00014909 	andeq	r4, r1, r9, lsl #18
 158:	01510200 	cmpeq	r1, r0, lsl #4
 15c:	1a030000 	bne	c0164 <startup-0x1ff3fe9c>
 160:	00000164 	andeq	r0, r0, r4, ror #2
 164:	0154040a 	cmpeq	r4, sl, lsl #8
 168:	240b0000 	strcs	r0, [fp], #-0
 16c:	01000001 	tsteq	r0, r1
 170:	00019849 	andeq	r9, r1, r9, asr #16
 174:	00001620 	andeq	r1, r0, r0, lsr #12
 178:	0c9c0100 	ldfeqs	f0, [ip], {0}
 17c:	00000192 	muleq	r0, r2, r1
 180:	015e3a01 	cmpeq	lr, r1, lsl #20
 184:	003a2000 	eorseq	r2, sl, r0
 188:	9c010000 	stcls	0, cr0, [r1], {-0}
 18c:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
 190:	0000160d 	andeq	r1, r0, sp, lsl #12
 194:	553a0100 	ldrpl	r0, [sl, #-256]!	; 0xffffff00
 198:	02000000 	andeq	r0, r0, #0
 19c:	b60e7791 			; <UNDEFINED> instruction: 0xb60e7791
 1a0:	01000001 	tsteq	r0, r1
 1a4:	0001c03b 	andeq	ip, r1, fp, lsr r0
 1a8:	b0030500 	andlt	r0, r3, r0, lsl #10
 1ac:	00200001 	eoreq	r0, r0, r1
 1b0:	0000810f 	andeq	r8, r0, pc, lsl #2
 1b4:	0001c000 	andeq	ip, r1, r0
 1b8:	01c51000 	biceq	r1, r5, r0
 1bc:	000f0000 	andeq	r0, pc, r0
 1c0:	0001b004 	andeq	fp, r1, r4
 1c4:	07040300 	streq	r0, [r4, -r0, lsl #6]
 1c8:	00000171 	andeq	r0, r0, r1, ror r1
 1cc:	00017a11 	andeq	r7, r1, r1, lsl sl
 1d0:	55280100 	strpl	r0, [r8, #-256]!	; 0xffffff00
 1d4:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
 1d8:	96200000 	strtls	r0, [r0], -r0
 1dc:	01000000 	mrseq	r0, (UNDEF: 0)
 1e0:	0002549c 	muleq	r2, ip, r4
 1e4:	01120e00 	tsteq	r2, r0, lsl #28
 1e8:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
 1ec:	0000004a 	andeq	r0, r0, sl, asr #32
 1f0:	126c9102 	rsbne	r9, ip, #-2147483648	; 0x80000000
 1f4:	200000d4 	ldrdcs	r0, [r0], -r4
 1f8:	0000007e 	andeq	r0, r0, lr, ror r0
 1fc:	776f7213 			; <UNDEFINED> instruction: 0x776f7213
 200:	4a2a0100 	bmi	a80608 <startup-0x1f57f9f8>
 204:	02000000 	andeq	r0, r0, #0
 208:	dc126f91 	ldcle	15, cr6, [r2], {145}	; 0x91
 20c:	64200000 	strtvs	r0, [r0], #-0
 210:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
 214:	000001a4 	andeq	r0, r0, r4, lsr #3
 218:	004a2c01 	subeq	r2, sl, r1, lsl #24
 21c:	91020000 	mrsls	r0, (UNDEF: 2)
 220:	00f0126e 	rscseq	r1, r0, lr, ror #4
 224:	00502000 	subseq	r2, r0, r0
 228:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
 22c:	01000000 	mrseq	r0, (UNDEF: 0)
 230:	00004a2e 	andeq	r4, r0, lr, lsr #20
 234:	6d910200 	lfmvs	f0, 4, [r1]
 238:	0000f812 	andeq	pc, r0, r2, lsl r8	; <UNPREDICTABLE>
 23c:	00003620 	andeq	r3, r0, r0, lsr #12
 240:	02100e00 	andseq	r0, r0, #0, 28
 244:	2f010000 	svccs	0x00010000
 248:	0000004a 	andeq	r0, r0, sl, asr #32
 24c:	006b9102 	rsbeq	r9, fp, r2, lsl #2
 250:	00000000 	andeq	r0, r0, r0
 254:	00017f14 	andeq	r7, r1, r4, lsl pc
 258:	4a250100 	bmi	940660 <startup-0x1f6bf9a0>
 25c:	ac000000 	stcge	0, cr0, [r0], {-0}
 260:	1c200000 	stcne	0, cr0, [r0], #-0
 264:	01000000 	mrseq	r0, (UNDEF: 0)
 268:	01060c9c 			; <UNDEFINED> instruction: 0x01060c9c
 26c:	21010000 	mrscs	r0, (UNDEF: 1)
 270:	20000068 	andcs	r0, r0, r8, rrx
 274:	00000044 	andeq	r0, r0, r4, asr #32
 278:	028b9c01 	addeq	r9, fp, #256	; 0x100
 27c:	78150000 	ldmdavc	r5, {}	; <UNPREDICTABLE>
 280:	4a210100 	bmi	840688 <startup-0x1f7bf978>
 284:	02000000 	andeq	r0, r0, #0
 288:	16007791 			; <UNDEFINED> instruction: 0x16007791
 28c:	000000fe 	strdeq	r0, [r0], -lr
 290:	00101301 	andseq	r1, r0, r1, lsl #6
 294:	00582000 	subseq	r2, r8, r0
 298:	9c010000 	stcls	0, cr0, [r1], {-0}
 29c:	00000016 	andeq	r0, r0, r6, lsl r0
 2a0:	000a0100 	andeq	r0, sl, r0, lsl #2
 2a4:	0c200000 	stceq	0, cr0, [r0], #-0
 2a8:	01000000 	mrseq	r0, (UNDEF: 0)
 2ac:	Address 0x000002ac is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	00160200 	andseq	r0, r6, r0, lsl #4
  14:	0b3a0e03 	bleq	e83828 <startup-0x1f17c7d8>
  18:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  1c:	24030000 	strcs	r0, [r3], #-0
  20:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  24:	000e030b 	andeq	r0, lr, fp, lsl #6
  28:	00260400 	eoreq	r0, r6, r0, lsl #8
  2c:	00001349 	andeq	r1, r0, r9, asr #6
  30:	0b002405 	bleq	904c <startup-0x1fff6fb4>
  34:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  38:	06000008 	streq	r0, [r0], -r8
  3c:	0b0b0113 	bleq	2c0490 <startup-0x1fd3fb70>
  40:	0b3b0b3a 	bleq	ec2d30 <startup-0x1f13d2d0>
  44:	00001301 	andeq	r1, r0, r1, lsl #6
  48:	03000d07 	movweq	r0, #3335	; 0xd07
  4c:	3b0b3a0e 	blcc	2ce88c <startup-0x1fd31774>
  50:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  54:	0800000b 	stmdaeq	r0, {r0, r1, r3}
  58:	0803000d 	stmdaeq	r3, {r0, r2, r3}
  5c:	0b3b0b3a 	bleq	ec2d4c <startup-0x1f13d2b4>
  60:	0b381349 	bleq	e04d8c <startup-0x1f1fb274>
  64:	35090000 	strcc	r0, [r9, #-0]
  68:	00134900 	andseq	r4, r3, r0, lsl #18
  6c:	000f0a00 	andeq	r0, pc, r0, lsl #20
  70:	13490b0b 	movtne	r0, #39691	; 0x9b0b
  74:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
  78:	03193f00 	tsteq	r9, #0, 30
  7c:	3b0b3a0e 	blcc	2ce8bc <startup-0x1fd31744>
  80:	1119270b 	tstne	r9, fp, lsl #14
  84:	40061201 	andmi	r1, r6, r1, lsl #4
  88:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  8c:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
  90:	03193f01 	tsteq	r9, #1, 30
  94:	3b0b3a0e 	blcc	2ce8d4 <startup-0x1fd3172c>
  98:	1119270b 	tstne	r9, fp, lsl #14
  9c:	40061201 	andmi	r1, r6, r1, lsl #4
  a0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  a4:	00001301 	andeq	r1, r0, r1, lsl #6
  a8:	0300050d 	movweq	r0, #1293	; 0x50d
  ac:	3b0b3a0e 	blcc	2ce8ec <startup-0x1fd31714>
  b0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  b4:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
  b8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  bc:	0b3b0b3a 	bleq	ec2dac <startup-0x1f13d254>
  c0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  c4:	010f0000 	mrseq	r0, CPSR
  c8:	01134901 	tsteq	r3, r1, lsl #18
  cc:	10000013 	andne	r0, r0, r3, lsl r0
  d0:	13490021 	movtne	r0, #36897	; 0x9021
  d4:	00000b2f 	andeq	r0, r0, pc, lsr #22
  d8:	3f012e11 	svccc	0x00012e11
  dc:	3a0e0319 	bcc	380d48 <startup-0x1fc7f2b8>
  e0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  e4:	11134919 	tstne	r3, r9, lsl r9
  e8:	40061201 	andmi	r1, r6, r1, lsl #4
  ec:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  f0:	00001301 	andeq	r1, r0, r1, lsl #6
  f4:	11010b12 	tstne	r1, r2, lsl fp
  f8:	00061201 	andeq	r1, r6, r1, lsl #4
  fc:	00341300 	eorseq	r1, r4, r0, lsl #6
 100:	0b3a0803 	bleq	e82114 <startup-0x1f17deec>
 104:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 108:	00001802 	andeq	r1, r0, r2, lsl #16
 10c:	3f002e14 	svccc	0x00002e14
 110:	3a0e0319 	bcc	380d7c <startup-0x1fc7f284>
 114:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 118:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 11c:	97184006 	ldrls	r4, [r8, -r6]
 120:	00001942 	andeq	r1, r0, r2, asr #18
 124:	03000515 	movweq	r0, #1301	; 0x515
 128:	3b0b3a08 	blcc	2ce950 <startup-0x1fd316b0>
 12c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 130:	16000018 			; <UNDEFINED> instruction: 0x16000018
 134:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 138:	0b3a0e03 	bleq	e8394c <startup-0x1f17c6b4>
 13c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 140:	06120111 			; <UNDEFINED> instruction: 0x06120111
 144:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 148:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	0000019e 	muleq	r0, lr, r1
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200001ae 	andcs	r0, r0, lr, lsr #3
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000e1 	andeq	r0, r0, r1, ror #1
   4:	00730002 	rsbseq	r0, r3, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6a6c6566 	bvs	1b195c4 <startup-0x1e4e6a3c>
  28:	65442f6f 	strbvs	r2, [r4, #-3951]	; 0xfffff091
  2c:	6f746b73 	svcvs	0x00746b73
  30:	72612f70 	rsbvc	r2, r1, #112, 30	; 0x1c0
  34:	7373616d 	cmnvc	r3, #1073741851	; 0x4000001b
  38:	6c626d65 	stclvs	13, cr6, [r2], #-404	; 0xfffffe6c
  3c:	632f7265 			; <UNDEFINED> instruction: 0x632f7265
  40:	5f65646f 	svcpl	0x0065646f
  44:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
  48:	79656b2f 	stmdbvc	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
  4c:	65725f62 	ldrbvs	r5, [r2, #-3938]!	; 0xfffff09e
  50:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
  54:	312d342f 			; <UNDEFINED> instruction: 0x312d342f
  58:	74730000 	ldrbtvc	r0, [r3], #-0
  5c:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  60:	00632e70 	rsbeq	r2, r3, r0, ror lr
  64:	74000001 	strvc	r0, [r0], #-1
  68:	73657079 	cmnvc	r5, #121	; 0x79
  6c:	0100682e 	tsteq	r0, lr, lsr #16
  70:	70670000 	rsbvc	r0, r7, r0
  74:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
  78:	00000100 	andeq	r0, r0, r0, lsl #2
  7c:	02050000 	andeq	r0, r5, #0
  80:	20000000 	andcs	r0, r0, r0
  84:	13010a03 	movwne	r0, #6659	; 0x1a03
  88:	0003025e 	andeq	r0, r3, lr, asr r2
  8c:	05000101 	streq	r0, [r0, #-257]	; 0xfffffeff
  90:	00001002 	andeq	r1, r0, r2
  94:	01120320 	tsteq	r2, r0, lsr #6
  98:	68593e30 	ldmdavs	r9, {r4, r5, r9, sl, fp, ip, sp}^
  9c:	a175675a 	cmnge	r5, sl, asr r7
  a0:	75f35967 	ldrbvc	r5, [r3, #2407]!	; 0x967
  a4:	3d67672f 	stclcc	7, cr6, [r7, #-188]!	; 0xffffff44
  a8:	5a594b3d 	bpl	1652da4 <startup-0x1e9ad25c>
  ac:	914b674b 	cmpls	fp, fp, asr #14
  b0:	02040200 	andeq	r0, r4, #0, 4
  b4:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
  b8:	587a0302 	ldmdapl	sl!, {r1, r8, r9}^
  bc:	01040200 	mrseq	r0, R12_usr
  c0:	02005806 	andeq	r5, r0, #393216	; 0x60000
  c4:	46060204 	strmi	r0, [r6], -r4, lsl #4
  c8:	01040200 	mrseq	r0, R12_usr
  cc:	03065806 	movweq	r5, #26630	; 0x6806
  d0:	4c2f4a0d 			; <UNDEFINED> instruction: 0x4c2f4a0d
  d4:	1e784b6e 	vsubne.f64	d20, d8, d30
  d8:	002f853e 	eoreq	r8, pc, lr, lsr r5	; <UNPREDICTABLE>
  dc:	30010402 	andcc	r0, r1, r2, lsl #8
  e0:	01000702 	tsteq	r0, r2, lsl #14
  e4:	Address 0x000000e4 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
   4:	00707574 	rsbseq	r7, r0, r4, ror r5
   8:	4550534f 	ldrbmi	r5, [r0, #-847]	; 0xfffffcb1
   c:	00524445 	subseq	r4, r2, r5, asr #8
  10:	45444f4d 	strbmi	r4, [r4, #-3917]	; 0xfffff0b3
  14:	656b0052 	strbvs	r0, [fp, #-82]!	; 0xffffffae
  18:	6c615679 	stclvs	6, cr5, [r1], #-484	; 0xfffffe1c
  1c:	42006575 	andmi	r6, r0, #490733568	; 0x1d400000
  20:	00525253 	subseq	r5, r2, r3, asr r2
  24:	31524641 	cmpcc	r2, r1, asr #12
  28:	52464100 	subpl	r4, r6, #0, 2
  2c:	6f630032 	svcvs	0x00630032
  30:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
  34:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
  38:	00524550 	subseq	r4, r2, r0, asr r5
  3c:	20554e47 	subscs	r4, r5, r7, asr #28
  40:	20393943 	eorscs	r3, r9, r3, asr #18
  44:	2e332e36 	mrccs	14, 1, r2, cr3, cr6, {1}
  48:	30322031 	eorscc	r2, r2, r1, lsr r0
  4c:	32303731 	eorscc	r3, r0, #12845056	; 0xc40000
  50:	28203531 	stmdacs	r0!, {r0, r4, r5, r8, sl, ip, sp}
  54:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  58:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  5c:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  60:	6d652f4d 	stclvs	15, cr2, [r5, #-308]!	; 0xfffffecc
  64:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  68:	362d6465 	strtcc	r6, [sp], -r5, ror #8
  6c:	6172622d 	cmnvs	r2, sp, lsr #4
  70:	2068636e 	rsbcs	r6, r8, lr, ror #6
  74:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  78:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  7c:	35343220 	ldrcc	r3, [r4, #-544]!	; 0xfffffde0
  80:	5d323135 	ldfpls	f3, [r2, #-212]!	; 0xffffff2c
  84:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  88:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  8c:	616d2d20 	cmnvs	sp, r0, lsr #26
  90:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  94:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  98:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  9c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  a0:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  a4:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  a8:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  ac:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  b0:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  b4:	616d2d20 	cmnvs	sp, r0, lsr #26
  b8:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  bc:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  c0:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  c4:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  c8:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  cc:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  d0:	00393963 	eorseq	r3, r9, r3, ror #18
  d4:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  d8:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  dc:	61686320 	cmnvs	r8, r0, lsr #6
  e0:	4f4c0072 	svcmi	0x004c0072
  e4:	5f524b43 	svcpl	0x00524b43
  e8:	73003631 	movwvc	r3, #1585	; 0x631
  ec:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
  f0:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
  f4:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  f8:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
  fc:	70610074 	rsbvc	r0, r1, r4, ror r0
 100:	696e4970 	stmdbvs	lr!, {r4, r5, r6, r8, fp, lr}^
 104:	63610074 	cmnvs	r1, #116	; 0x74
 108:	61766974 	cmnvs	r6, r4, ror r9
 10c:	6f526574 	svcvs	0x00526574
 110:	63610077 	cmnvs	r1, #119	; 0x77
 114:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
 118:	0079654b 	rsbseq	r6, r9, fp, asr #10
 11c:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
 120:	00635f38 	rsbeq	r5, r3, r8, lsr pc
 124:	6e69616d 	powvsez	f6, f1, #5.0
 128:	53455200 	movtpl	r5, #20992	; 0x5200
 12c:	5244495f 	subpl	r4, r4, #1556480	; 0x17c000
 130:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
 134:	00363174 	eorseq	r3, r6, r4, ror r1
 138:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
 13c:	52003233 	andpl	r3, r0, #805306371	; 0x30000003
 140:	4f5f5345 	svcmi	0x005f5345
 144:	52005244 	andpl	r5, r0, #68, 4	; 0x40000004
 148:	4c5f5345 	mrrcmi	3, 4, r5, pc, cr5	; <UNPREDICTABLE>
 14c:	524b434f 	subpl	r4, fp, #1006632961	; 0x3c000001
 150:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
 154:	7274506f 	rsbsvc	r5, r4, #111	; 0x6f
 158:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
 15c:	726f506f 	rsbvc	r5, pc, #111	; 0x6f
 160:	69750074 	ldmdbvs	r5!, {r2, r4, r5, r6}^
 164:	3631746e 	ldrtcc	r7, [r1], -lr, ror #8
 168:	5000635f 	andpl	r6, r0, pc, asr r3
 16c:	52445055 	subpl	r5, r4, #85	; 0x55
 170:	7a697300 	bvc	1a5cd78 <startup-0x1e5a3288>
 174:	70797465 	rsbsvc	r7, r9, r5, ror #8
 178:	656b0065 	strbvs	r0, [fp, #-101]!	; 0xffffff9b
 17c:	72006279 	andvc	r6, r0, #-1879048185	; 0x90000007
 180:	43646165 	cmnmi	r4, #1073741849	; 0x40000019
 184:	6d756c6f 	ldclvs	12, cr6, [r5, #-444]!	; 0xfffffe44
 188:	5200736e 	andpl	r7, r0, #-1207959551	; 0xb8000001
 18c:	4f5f5345 	svcmi	0x005f5345
 190:	756f0054 	strbvc	r0, [pc, #-84]!	; 144 <startup-0x1ffffebc>
 194:	65733774 	ldrbvs	r3, [r3, #-1908]!	; 0xfffff88c
 198:	68730067 	ldmdavs	r3!, {r0, r1, r2, r5, r6}^
 19c:	2074726f 	rsbscs	r7, r4, pc, ror #4
 1a0:	00746e69 	rsbseq	r6, r4, r9, ror #28
 1a4:	756c6f63 	strbvc	r6, [ip, #-3939]!	; 0xfffff09d
 1a8:	61566e6d 	cmpvs	r6, sp, ror #28
 1ac:	0065756c 	rsbeq	r7, r5, ip, ror #10
 1b0:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
 1b4:	65730038 	ldrbvs	r0, [r3, #-56]!	; 0xffffffc8
 1b8:	536e6576 	cmnpl	lr, #494927872	; 0x1d800000
 1bc:	656d6765 	strbvs	r6, [sp, #-1893]!	; 0xfffff89b
 1c0:	6f43746e 	svcvs	0x0043746e
 1c4:	00736564 	rsbseq	r6, r3, r4, ror #10
 1c8:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff78d <sevenSegmentCodes.4040+0xdffff5dd>
 1cc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 1d0:	6c65662f 	stclvs	6, cr6, [r5], #-188	; 0xffffff44
 1d4:	442f6f6a 	strtmi	r6, [pc], #-3946	; 1dc <startup-0x1ffffe24>
 1d8:	746b7365 	strbtvc	r7, [fp], #-869	; 0xfffffc9b
 1dc:	612f706f 			; <UNDEFINED> instruction: 0x612f706f
 1e0:	73616d72 	cmnvc	r1, #7296	; 0x1c80
 1e4:	626d6573 	rsbvs	r6, sp, #482344960	; 0x1cc00000
 1e8:	2f72656c 	svccs	0x0072656c
 1ec:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 1f0:	74696c5f 	strbtvc	r6, [r9], #-3167	; 0xfffff3a1
 1f4:	656b2f65 	strbvs	r2, [fp, #-3941]!	; 0xfffff09b
 1f8:	725f6279 	subsvc	r6, pc, #-1879048185	; 0x90000007
 1fc:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 200:	2d342f72 	ldccs	15, cr2, [r4, #-456]!	; 0xfffffe38
 204:	74732f31 	ldrbtvc	r2, [r3], #-3889	; 0xfffff0cf
 208:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
 20c:	00632e70 	rsbeq	r2, r3, r0, ror lr
 210:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 214:	6f436576 	svcvs	0x00436576
 218:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000058 	andeq	r0, r0, r8, asr r0
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000068 	andcs	r0, r0, r8, rrx
  48:	00000044 	andeq	r0, r0, r4, asr #32
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	100e4101 	andne	r4, lr, r1, lsl #2
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	200000ac 	andcs	r0, r0, ip, lsr #1
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	40080e41 	andmi	r0, r8, r1, asr #28
  70:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  74:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  78:	00000020 	andeq	r0, r0, r0, lsr #32
  7c:	00000000 	andeq	r0, r0, r0
  80:	200000c8 	andcs	r0, r0, r8, asr #1
  84:	00000096 	muleq	r0, r6, r0
  88:	400c0e41 	andmi	r0, ip, r1, asr #28
  8c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  90:	018e4002 	orreq	r4, lr, r2
  94:	41180e41 	tstmi	r8, r1, asr #28
  98:	0000070d 	andeq	r0, r0, sp, lsl #14
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	00000000 	andeq	r0, r0, r0
  a4:	2000015e 	andcs	r0, r0, lr, asr r1
  a8:	0000003a 	andeq	r0, r0, sl, lsr r0
  ac:	40080e41 	andmi	r0, r8, r1, asr #28
  b0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  b4:	100e4101 	andne	r4, lr, r1, lsl #2
  b8:	00070d41 	andeq	r0, r7, r1, asr #26
  bc:	00000018 	andeq	r0, r0, r8, lsl r0
  c0:	00000000 	andeq	r0, r0, r0
  c4:	20000198 	mulcs	r0, r8, r1
  c8:	00000016 	andeq	r0, r0, r6, lsl r0
  cc:	40080e41 	andmi	r0, r8, r1, asr #28
  d0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  d4:	070d4101 	streq	r4, [sp, -r1, lsl #2]
